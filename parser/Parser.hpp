//
// Created by Revhome on 28.09.2025.
//

#ifndef HAR_PARSER_APP_PARCER_H
#define HAR_PARSER_APP_PARCER_H

#include <string>
#include <vector>
#include "../include/Entry.hpp"
#include "../include/Occurrence.hpp"
#include "../include/Variable.hpp"
#include "../include/Indexes.hpp"
#include "../lib/simdjson/simdjson.h"

namespace simdjson::dom {
    class element;
}

class Parser {
public:
    Parser() = default;

    // üîπ –ó–∞–≥—Ä—É–∂–∞–µ—Ç HAR-—Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç—å (DOM)
    bool loadHarFile(const std::string &filename);

    // üîπ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ Entry –ø–æ—Å–ª–µ —Ä–∞–∑–±–æ—Ä–∞
    const std::vector<Entry> &getEntries() const { return entries; }

    // üîπ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ inverted index –ø–æ –∫–ª—é—á–∞–º –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º
    void buildIndexes();

private:
    std::vector<Entry> entries; // –í—Å–µ Entry –∏–∑ HAR
    InvertedIndex invertedIndex; // value -> Occurrences
    KeyIndex keyIndex; // key -> (value, Occurrence)
    VariableMap variables; // –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π -> Variable

    // üîπ –†–∞–∑–±–æ—Ä –æ–¥–Ω–æ–≥–æ Entry
    void parseEntry(const simdjson::dom::element &elem, uint64_t id);

    // üîπ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ key-value –∏–∑ JSON —Å—Ç—Ä–æ–∫–∏
    void extractKeyValues(const std::string &jsonStr, uint64_t entry_id, const std::string &location);

    // üîπ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ URL (query string)
    void extractQueryParams(const std::string &url, uint64_t entry_id);

    // üîπ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ request body (–¥–ª—è form data / JSON)
    void extractRequestParams(const std::string &body, uint64_t entry_id);
};

#endif //HAR_PARSER_APP_PARCER_H
